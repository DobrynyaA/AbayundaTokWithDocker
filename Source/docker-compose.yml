version: '3.4'

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

services:
  abayundatok:
    image: ${DOCKER_REGISTRY-}abayundatok
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
      ASPNETCORE_HTTP_PORT: "8080"
      DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER: "0"
      DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_ENABLEMULTIPLECONNCT: "0"
    ports:
      - "8080:8080"
    build:
      context: .
      dockerfile: AbayundaTok/Dockerfile
    dns:
      - 1.1.1.1
      - 8.8.8.8
    depends_on:
      - at_db_pgsql
      - minio
    networks:
      - app-network

  at_db_pgsql:
    image: postgres:latest
    expose: 
      - "5433"
    ports:
      - "5433:5433"
    environment:
      POSTGRES_DB: at_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - at_db_pgsql_data:/var/lib/postgresql/data
    command: -p 5433
    networks:
      - app-network

  minio:
    user: root
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin1
      MINIO_ROOT_PASSWORD: minioadmin1
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
      MINIO_SERVER_URL: http://localhost:9000
      MINIO_PROMETHEUS_AUTH_TYPE: public
      MINIO_BROWSER: "on"
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server --console-address ":9001" /data
    volumes:
      - minio_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  at_db_pgsql_data:
  minio_data: